if(is.function(logger)){
loginfo('All done!',logger)
}
# Write to SQLite DB
if(isS4(db_conn)){
dbWriteTable(db_conn, airport, weather_frame, overwrite=TRUE)
}
return(weather_frame)
}
if(interactive()){
##----Setup Test Logger-----
basicConfig()
addHandler(writeToFile, file="~/testing.log", level='DEBUG')
##----Test Parameters----
airport = 'KSEA'
dates = seq(from=as.Date('2015-05-01'),
to=as.Date('2015-05-06'),
by=1)
sql_db_name = 'weather.db'
##----Connect to SQLite DB----
con = dbConnect(SQLite(), dbname=sql_db_name)
weather_data = get_weather_data(airport, dates, logger=writeToFile, db_conn=con)
dbDisconnect(con)
}
install.packages("weatherData")
install.packages("weatherData")
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01")
firenze=getWeatherForDate("LIRQ", station_type="airportCode","2015-08-01")
a=curl(http://www.wunderground.com/history/airport/LIRQ/2015/8/1/CustomHistory.html?dayend=1&monthend=8&yearend=2015&req_city=NA&req_state=NA&req_statename=NA&format=1)
a=curl("http://www.wunderground.com/history/airport/LIRQ/2015/8/1/CustomHistory.html?dayend=1&monthend=8&yearend=2015&req_city=NA&req_state=NA&req_statename=NA&format=1")
a=curl::curl("http://www.wunderground.com/history/airport/LIRQ/2015/8/1/CustomHistory.html?dayend=1&monthend=8&yearend=2015&req_city=NA&req_state=NA&req_statename=NA&format=1")
a
readLines(u)
readLines(a)
getDetailedWeather("LIRQ",start_date="2015-01-01",opt_all_columns=T)
checkDataAvailability("LIRQ","2015-08-01")
curl::curl("http://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
a=curl::curl("http://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
readLines(a)
getDetailedWeather("NRT", "2014-04-29", opt_all_columns=T)
detach("package:weatherData", unload=TRUE)
remove.packages("weatherData", lib="~/R/x86_64-pc-linux-gnu-library/3.3")
devtools::install_github("alfcrisci/weatherData")
library(weatherData)
getDetailedWeather("LIRQ",start_date="2015-01-01",opt_all_columns=T)
getDetailedWeather("LIRQ","2015-01-01",opt_all_columns=T)
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01")
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01","2015-08-31")
firenze
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01","2015-08-31",opt_detailed = T)
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01","2015-08-31",opt_detailed = TRUE)
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01","2015-08-31")
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01",opt_detailed = TRUE)
curl:curl("https://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
curl::curl("https://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
curl:curl("https://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
curl("https://www.wunderground.com/history/airport/LIRQ/2015/8/1/DailyHistory.html?format=1")
devtools::install_github("alfcrisci/weatherData")
devtools::install_github("alfcrisci/weatherData")
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01",opt_detailed = TRUE)
firenze
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01",opt_detailed = TRUE,opt_all_columns = FALSE)
library(weatherData)
firenze=getWeatherForDate("LIRQ", "2015-08-01",opt_detailed = TRUE,opt_all_columns = T)
firenze
library(biometeoR)
biometeoR::ssi(firenze$TemperatureC,firenze$Humidity)
apply(cbind(firenze$TemperatureC,firenze$Humidity)),1,ssi)
apply(cbind(firenze$TemperatureC,firenze$Humidity)),1,FUN=function(x) ssi(x[1],x[2]))
apply(cbind(firenze$TemperatureC,firenze$Humidity)),1,FUN=function(x) ssi(x[1],x[2]))
apply(cbind(firenze$TemperatureC,firenze$Humidity)),1,FUN=function(x) ssi(x[1],x[2]))
apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2]))
mean(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
ssi
ssi(mean(firenze$TemperatureC,na.rm=T),mean(firenze$Humidity,na.rm=T))
firenze=getWeatherForDate("LIRQ", station_type="airportCode","2015-08-10")
mean_hourly_param=mean(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
mean_day_param=ssi(mean(firenze$TemperatureC,na.rm=T),mean(firenze$Humidity,na.rm=T))
getWeatherForDate("LIRQ", station_type="airportCode","2015-08-10")
firenze=getWeatherForDate("LIRQ", "2015-08-01",opt_detailed = TRUE,opt_all_columns = T)
firenze=getWeatherForDate("LIRQ", "2015-08-10",opt_detailed = TRUE,opt_all_columns = T)
mean_hourly_param=mean(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
mean_day_param=ssi(mean(firenze$TemperatureC,na.rm=T),mean(firenze$Humidity,na.rm=T))
mean_hourly_param
mean_day_param
firenze
firenze=getWeatherForDate("LIRQ", "2015-07-21",opt_detailed = TRUE,opt_all_columns = T)
firenze
mean_hourly_param=mean(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
mean_day_param=ssi(mean(firenze$TemperatureC,na.rm=T),mean(firenze$Humidity,na.rm=T))
mean_hourly_param
mean_day_param
100*(exp((17.625*firenze$Dew_PointC)/(243.04+firenze$Dew_PointC))/exp((17.625*temp_daily$tmed)/(243.04+firenze$TemperatureC)))
rh_stim=100*(exp((17.625*firenze$Dew_PointC)/(243.04+firenze$Dew_PointC))/exp((17.625*firenze$TemperatureC)/(243.04+firenze$TemperatureC)))
rh_stim
firenze$Humidity-rh_stim
apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])
)
range(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
range(firenze$TemperatureC)
range(firenze$Humidity)
range(firenze$Dew_PointC)
max_day_param=ssi(max(firenze$TemperatureC,na.rm=T),mean(firenze$Humidity,na.rm=T))
max_day_param
max_day_param=ssi(max(firenze$TemperatureC,na.rm=T),min(firenze$Humidity,na.rm=T))
min_day_param
min_day_param=ssi(max(firenze$TemperatureC,na.rm=T),min(firenze$Humidity,na.rm=T))
min_day_param
rh_stim=100*(exp((17.625*firenze$Dew_PointC)/(243.04+firenze$Dew_PointC))/exp((17.625*firenze$TemperatureC)/(243.04+firenze$TemperatureC)))
min_day_param_dewp=ssi(max(firenze$TemperatureC,na.rm=T),min(rh_stim,na.rm=T))
min_day_param_dewp
min_day_param_dewp=ssi(max(firenze$TemperatureC,na.rm=T),mean(rh_stim,na.rm=T))
min_day_param_dewp
max(apply(cbind(firenze$TemperatureC,firenze$Humidity),1,FUN=function(x) ssi(x[1],x[2])))
cbind(firenze$TemperatureC,firenze$Humidity)
install.packages("feedeR")
library(feedeR)
res=feed.extract("https://news.google.com/news/section?hl=it&pz=1&ned=it&q=Xylella&num=100")
res=feed.extract("http://news.google.com/news?cf=all&hl=it&pz=1&ned=it&q=Xylella&output=rss")
res=feed.extract("http://news.google.com/news?cf=all&hl=it&pz=1&ned=it&q=Xylella&output=atom")
res=feed.extract("https://news.google.com/news?cf=all&hl=it&pz=1&ned=it&q=Xylella&output=rss")
res
res=feed.extract("https://news.google.com/news?cf=all&hl=it&pz=1&ned=it&q=Xylella&num=100&output=rss")
res
devtools::install_github("lchiffon/wordcloud2")
?wordcloud2
??wordcloud2
install.packages("humidr")
devtools::install_github("ijlyttle/humidr")
library(humidr)
humidr::t_wb(27,30)
?t_wb
t_wb(27,30)
t_wb(30,30)
install.packages("wikipediatrend")
library(wikipediatrend)
wp <- wp_trend(page = c("Fever","Fieber"),
from = "2013-08-01",
to   = "2015-12-31",
lang = c("en","de"))
wp <- wp_trend(page = c("Fever","Fieber"),
from = "2016-08-01",
to   = "2016-08-20",
lang = c("en","de"))
wp
install.packages("tibble")
library(leaflet)
mymap <- mymap %>%
addTiles(
'http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg',
attribution = 'Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
) %>% setView(-97, 40, zoom = 4)
mymap
mymap <- leaflet() %>% addTiles()
##### Location Names
Location <- c("Atlanta ","Los Angeles","Chicago","New York","Dallas","Baltimore","Phoenix","Charlotte","Houston","San Antonio", "Seattle" )
#### Latitude and Longitude values for each of the above location
Lat <- c(33.74401,33.82377,41.78798,40.767309,32.88153,39.148492,33.45444,35.2406,29.935842,29.44838,47.714965 )
Lon <- c(-84.56032,-118.2668,-87.7738,-73.978308,-96.64601,-76.796211,-112.32401,-81.04028,-95.398436,-98.39908,-122.127166 )
#### Some hypothetical number of orders shipped out of each location
Orders <- c(1992,2500,3600,2252,3650,3450,4145,3945,5050,4300,1987)
#### Let us create some hypothetical class flags for the cities
Type <- c(rep("Yoda",5),rep("Vader",6))
### Create data set from the above vectors
df <- data.frame(Location, Lat,Lon,Orders,Type)
mymap <- mymap %>%
addTiles(
'http://otile{s}.mqcdn.com/tiles/1.0.0/map/{z}/{x}/{y}.jpeg',
attribution = 'Tiles Courtesy of <a href="http://www.mapquest.com/">MapQuest</a> &mdash; Map data &copy; <a href="http://www.openstreetmap.org/copyright">OpenStreetMap</a>'
) %>% setView(-97, 40, zoom = 4)
mymap
mymap %>% addMarkers(data=df,df[1,"Lon"],df[1,"Lat"], icon = JS("L.icon({
iconUrl: 'http://icons.iconarchive.com/icons/artua/star-wars/128/Master-Joda-icon.png',
iconSize: [75, 75]
})"))
mymap %>% addMarkers(data=df,df[1,"Lon"],df[1,"Lat"], icon = JS("L.icon({
iconUrl: 'http://icons.iconarchive.com/icons/artua/star-wars/128/Master-Joda-icon.png',
iconSize: [75, 75]
})"))
?addMarkers
library(leaflet)
icon_social_A <- makeIcon(
iconUrl = "http://149.139.8.55/data/icons/icon_social_blue_A.png",
iconWidth = 50, iconHeight = 50,
)
icon_social_B <- makeIcon(
iconUrl = "http://149.139.8.55/data/icons/icon_social_B.png",
iconWidth = 50, iconHeight = 50,
)
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = icon_social_B)
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = icon_social_B,radius=10)
?addMarkers
leaflet(data = quakes[1:4,]) %>% addTiles() %>%
addMarkers(~long, ~lat, icon = icon_social_B,radius=c(10,5,10,20))
?addMarkers
require(rCharts)
map = Leaflet$new()
map$setView(c(40.71,-74.20),zoom=12)
map$setTemplate(afterScript = sprintf("<script>
var imageUrl = 'http://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg',
imageBounds = [[40.712216, -74.22655], [40.773941, -74.12544]]
L.imageOverlay(imageUrl, imageBounds,{ opacity: .5}).addTo(map);
</script>"))
map
class(map)
str(map)
library(leaflet)
library(htmltools)
library(htmlwidgets)
esriPlugin <- htmlDependency("leaflet.esri", "1.0.3",
src = c(href = "https://cdn.jsdelivr.net/leaflet.esri/1.0.3/"),
script = "esri-leaflet.js"
)
registerPlugin <- function(map, plugin) {
map$dependencies <- c(map$dependencies, list(plugin))
map
}
leaflet() %>% setView(-122.23, 37.75, zoom = 10) %>%
# Register ESRI plugin on this map instance
registerPlugin(esriPlugin) %>%
# Add your custom JS logic here. The `this` keyword
# refers to the Leaflet (JS) map object.
onRender("function(el, x) {
L.esri.basemapLayer('Topographic').addTo(this);
}")
devtools::install_github("ramnathv/htmlwidgets@joe/feature/onrender-data")
?onRender
el
x
library(leaflet)
data(quakes)
leaflet(data = quakes[1:20,]) %>% addTiles() %>%
addPopups(~long, ~lat, ~as.character(mag),
options = popupOptions(minWidth = 20, closeOnClick = FALSE, closeButton = FALSE))
cities <- read.csv(textConnection("
City,Lat,Long,Pop
Boston,42.3601,-71.0589,645966
Hartford,41.7627,-72.6743,125017
New York City,40.7127,-74.0059,8406000
Philadelphia,39.9500,-75.1667,1553000
Pittsburgh,40.4397,-79.9764,305841
Providence,41.8236,-71.4222,177994
"))
library(htmltools)
leaflet(cities) %>% addTiles() %>%
addMarkers(lng = ~Long, lat = ~Lat,
label = mapply(function(x, y) {
HTML(sprintf("<em>%s:</em> %s", htmlEscape(x), htmlEscape(y)))},
cities$City, cities$Pop, SIMPLIFY = F),
labelOptions = lapply(1:nrow(cities), function(x) {
labelOptions(opacity=0.9)
})
)
library(htmltools)
leaflet(cities) %>% addTiles() %>%
addMarkers(lng = ~Long, lat = ~Lat,
label = mapply(function(x, y) {
HTML(sprintf("<em>%s:</em> %s", htmlEscape(x), htmlEscape(y)))},
cities$City, cities$Pop, SIMPLIFY = F),
labelOptions = lapply(1:nrow(cities), function(x) {
labelOptions(opacity=0.9,closeOnClick = FALSE, closeButton = FALSE)
})
)
?labelOptions
library(htmltools)
leaflet(cities) %>% addTiles() %>%
addMarkers(lng = ~Long, lat = ~Lat,
label = mapply(function(x, y) {
HTML(sprintf("<em>%s:</em> %s", htmlEscape(x), htmlEscape(y)))},
cities$City, cities$Pop, SIMPLIFY = F),
labelOptions = lapply(1:nrow(cities), function(x) {
labelOptions(opacity=0.9,clickable = FALSE, noHide = FALSE)
})
)
library(htmltools)
leaflet(cities) %>% addTiles() %>%
addMarkers(lng = ~Long, lat = ~Lat,
label = mapply(function(x, y) {
HTML(sprintf("<em>%s:</em> %s", htmlEscape(x), htmlEscape(y)))},
cities$City, cities$Pop, SIMPLIFY = F),
labelOptions = lapply(1:nrow(cities), function(x) {
labelOptions(opacity=0.9,clickable = FALSE, noHide = TRUE)
})
)
icon_social_B <- makeIcon(
iconUrl = "http://149.139.8.55/data/icons/icon_social_B.png",
iconWidth = 50, iconHeight = 50
)
leaflet(cities) %>% addTiles() %>%
addMarkers(lng = ~Long, lat = ~Lat,icon = icon_social_B,
label = mapply(function(x, y) {
HTML(sprintf("<em>%s:</em> %s", htmlEscape(x), htmlEscape(y)))},
cities$City, cities$Pop, SIMPLIFY = F),
labelOptions = lapply(1:nrow(cities), function(x) {
labelOptions(opacity=0.9,clickable = FALSE, noHide = TRUE)
})
)
#####################################################################################
library(raster)
library(leaflet)
library(htmlwidgets)
library(mapview)
library(OpenStreetMap)
library(rasterVis)
library(ggplot2)
library(rgdal)
library(ggmap)
library(grid)
library(latticeExtra)
library(maptools)
library(webshot)
library(RColorBrewer)
library(sjPlot)
library(sjmisc)
library(gplots)
library(xts)
library(dygraphs)
setwd("/home/alf/Scrivania/lav_caldo/modis")
#####################################################################################
simpleCap <- function(x) {
s <- strsplit(x, " ")[[1]]
paste(toupper(substring(s, 1,1)), substring(s, 2),
sep="", collapse=" ")
}
cor.mtest <- function(mat, ...) {
mat <- as.matrix(mat)
n <- ncol(mat)
p.mat<- matrix(NA, n, n)
diag(p.mat) <- 0
for (i in 1:(n - 1)) {
for (j in (i + 1):n) {
tmp <- cor.test(mat[, i], mat[, j], ...)
p.mat[i, j] <- p.mat[j, i] <- tmp$p.value
}
}
colnames(p.mat) <- rownames(p.mat) <- colnames(mat)
p.mat
}
######################################################################################
# Data
ITA_reg=readRDS("ITA_reg.rds")
cities=as.character(readRDS("list_cities.rds"))
cities_sp=readRDS("cities_sp.rds")
all_stats=readRDS("all_stats_cities_regions.rds")
all_stats_reg=readRDS("all_stats_cities_regions_reg.rds")
city_stats=readRDS("city_stats.rds")
dates_HW_2015=readRDS("dates_HW_2015.rds")
i=4
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp=all_stats[[i]][names_var]
social_heat <- xts(temp,order.by= date_period)
names_var=c("TW", "RTW","Tappmax")
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp=all_stats[[i]][names_var]
social_heat <- xts(temp,order.by= date_period)
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green","red"),strokeWidth = 3) %>% dySeries(c("Tappmax"), axis = 'y2')
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green","red"),strokeWidth = c(3,2,2) %>% dySeries(c("Tappmax"), axis = 'y2')
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green","red"),strokeWidth = c(3,2,2)) %>% dySeries(c("Tappmax"), axis = 'y2')
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green","red"),strokeWidth = c(3,2,2)) %>% dySeries(c("Tappmax"), axis = 'y2')
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green","red"),strokeWidth = c(7,2,2)) %>% dySeries(c("Tappmax"), axis = 'y2')
temp_html
temp_w=all_stats[[i]][names_var_clim]
names_var_clim="Tappmax"
temp_w=all_stats[[i]][names_var_clim]
social_heat <- xts(temp_social,order.by= date_period)
w_heat <- xts(temp_w,order.by= date_period)
temp_social=all_stats[[i]][names_var]
temp_w=all_stats[[i]][names_var_clim]
social_heat <- xts(temp_social,order.by= date_period)
w_heat <- xts(temp_w,order.by= date_period)
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green"),strokeWidth = 2 %>% dySeries(w_heat, axis = 'y2')
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))  %>% dyOptions(colors = c("navy","green"),strokeWidth = 2) %>% dySeries(w_heat, axis = 'y2')
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),strokeWidth = 2)
names_var=c("TW", "RTW")
names_var_clim="Tappmax"
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp_social=all_stats[[i]][names_var]
temp_w=all_stats[[i]][names_var_clim]
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),strokeWidth = 2)
temp_social
social_heat <- xts(temp_social,order.by= date_period)
social_heat
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i])))
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stackedGraph = TRUE,strokeWidth = 2)
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,stemstrokeWidth = 2)
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2)
names_var=c( "RTW","TW")
names_var_clim="Tappmax"
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp_social=all_stats[[i]][names_var]
temp_w=all_stats[[i]][names_var_clim]
social_heat <- xts(temp_social,order.by= date_period)
w_heat <- xts(temp_w,order.by= date_period)
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2)
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(w_heat, axis = 'y2')
w_heat
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dygraph(w_heat, axis = 'y2')
names_var=c( "RTW","TW","Tappmax")
dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(c("Tappmax"),strokeWidth = 3, axis = 'y2')
temp_social=all_stats[[i]][names_var]
social_heat <- xts(temp_social,order.by= date_period)
social_heat
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(c("Tappmax"),strokeWidth = 3, axis = 'y2')
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(c("Tappmax"),stepPlot = F,stackedGraph = F,strokeWidth = 3, axis = 'y2')
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(c("Tappmax"),stepPlot = F,strokeWidth = 3, axis = 'y2')
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 2) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2')
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2')
temp_html
for ( j in 1:nrow(temp_dates)) {
temp_html =dyShading(temp_html,from=temp_dates$date_first[j],to=temp_dates$date_last[j],color="#EFEFEF")
}
temp_html
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 2, axis = 'y2')
temp_html
setwd("/home/alf/Scrivania/lav_caldo/modis")
mat_tmaxapp=do.call("cbind",lapply(all_stats,function(x) x$Tappmax))
tmax_ita=apply(mat_tmaxapp,1,function(x) mean(x,na.rm=T))
mat_nation=data.frame(RTW_TW=caldo_stat_period_daily$RTW,
TW=caldo_stat_period_daily$TW,
TmaxApp=tmax_ita)
mat_nation_ts <- xts(mat_nation,order.by= caldo_stat_period_daily$date)
temp_html=dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>%
dyRangeSelector()
setwd("/home/alf/Scrivania/lav_caldo/modis")
mat_tmaxapp=do.call("cbind",lapply(all_stats,function(x) x$Tappmax))
tmax_ita=apply(mat_tmaxapp,1,function(x) mean(x,na.rm=T))
setwd("/home/alf/Scrivania/lav_caldo/data_streams")
caldo_stat_period_daily=readRDS("caldo_stat_period_daily.rds")
caldo_stat_period=readRDS("caldo_stat_period.rds")
mat_nation=data.frame(RTW_TW=caldo_stat_period_daily$RTW,
TW=caldo_stat_period_daily$TW,
TmaxApp=tmax_ita)
mat_nation_ts <- xts(mat_nation,order.by= caldo_stat_period_daily$date)
temp_html=dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>%
dyRangeSelector()
temp_html=dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("TmaxApp"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>%
temp_html=dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("TmaxApp"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2')
dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")
dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1)
dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("TmaxApp"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2')
saveWidget(temp_html,file=paste0("Channel_caldo.html"), selfcontained = T)
webshot(url=paste0("Channel_caldo.html"),file=paste0("Channel_caldo.png"),vwidth=1500)
dir()
setwd("/home/alf/Scrivania/lav_caldo/modis/graph_ts")
dir()
saveWidget(temp_html,file=paste0("Channel_caldo.html"), selfcontained = T)
webshot(url=paste0("Channel_caldo.html"),file=paste0("Channel_caldo.png"),vwidth=1500)
temp_html
temp_html=dygraph(mat_nation_ts,  main = "Filtered Channel CALDO vs mean TMaxApp in Italy")  %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("TmaxApp"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2')
saveWidget(temp_html,file=paste0("Channel_caldo.html"), selfcontained = T)
webshot(url=paste0("Channel_caldo.html"),file=paste0("Channel_caldo.png"),vwidth=1500)
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>% dyLegend(width = 400)
temp_html
names_var=c( "RTW","TW","Tappmax")
for ( i in seq_along(all_stats)) {
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp_social=all_stats[[i]][names_var]
social_heat <- xts(temp_social,order.by= date_period)
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>% dyLegend(width = 400)
for ( j in 1:nrow(temp_dates)) {
temp_html =dyShading(temp_html,from=temp_dates$date_first[j],to=temp_dates$date_last[j],color="#EFEFEF")
}
saveWidget(temp_html,file=paste0("graph_",cities[i],"_two_axis_tappmax.html"), selfcontained = T)
webshot(url=paste0("graph_",cities[i],"_two_axis_tappmax.html"),file=paste0("graph_",cities[i],"_two_axis_tappmax.png"),vwidth=1500)
}
names_var=c("TW", "RTW","tmin")
for ( i in seq_along(all_stats)) {
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp=all_stats[[i]][names_var]
social_heat <- xts(temp,order.by= date_period)
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("Tappmax"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>% dyLegend(width = 400)
for ( j in 1:nrow(temp_dates)) {
temp_html =dyShading(temp_html,from=temp_dates$date_first[j],to=temp_dates$date_last[j],color="#EFEFEF")
}
saveWidget(temp_html,file=paste0("graph_",cities[i],"_two_axis_tmin.html"), selfcontained = T)
webshot(url=paste0("graph_",cities[i],"_two_axis_tmin.html"),file=paste0("graph_",cities[i],"_two_axis_tmin.png"),vwidth=1500)
}
names_var=c("TW", "RTW","tmin")
for ( i in seq_along(all_stats)) {
date_period=all_stats[[i]]$date
temp_dates=dates_HW_2015[which(as.character(dates_HW_2015$city)==cities[i]),]
temp=all_stats[[i]][names_var]
social_heat <- xts(temp,order.by= date_period)
temp_html=dygraph(social_heat, main = paste0("Twitter impact in ",simpleCap(cities[i]))) %>% dyOptions(colors = c("navy","green","red"),stepPlot = TRUE,stackedGraph = TRUE,strokeWidth = 1) %>% dySeries(c("tmin"),stepPlot = F,fillGraph = F,strokeWidth = 3, axis = 'y2') %>% dyLegend(width = 400)
for ( j in 1:nrow(temp_dates)) {
temp_html =dyShading(temp_html,from=temp_dates$date_first[j],to=temp_dates$date_last[j],color="#EFEFEF")
}
saveWidget(temp_html,file=paste0("graph_",cities[i],"_two_axis_tmin.html"), selfcontained = T)
webshot(url=paste0("graph_",cities[i],"_two_axis_tmin.html"),file=paste0("graph_",cities[i],"_two_axis_tmin.png"),vwidth=1500)
}
